{"version":3,"sources":["/source/src/common/trigger-method.js","/source/src/common/monitor-view-events.js","/source/src/common/bind-events.js","/source/src/common/bind-requests.js","/source/src/mixins/behaviors.js","/source/src/utils/get-unique-event-name.js","/source/src/mixins/triggers.js","/source/src/utils/destroy-backbone-view.js","/source/src/config/behaviors-lookup.js","/source/src/config/features.js","/source/src/utils/proxy.js","/source/src/utils/extend.js","/source/src/utils/deprecate.js","/source/src/common/is-node-attached.js","/source/src/common/merge-options.js","/source/src/common/get-option.js","/source/src/common/normalize-methods.js","/source/src/error.js","/source/src/utils/set-options.js","/source/src/mixins/common.js","/source/src/mixins/radio.js","/source/src/object.js","/source/src/template-cache.js","/source/src/utils/invoke.js","/source/src/mixins/delegate-entity-events.js","/source/src/mixins/ui.js","/source/src/mixins/view.js","/source/src/region.js","/source/src/mixins/regions.js","/source/src/config/renderer.js","/source/src/view.js","/source/src/utils/emulate-collection.js","/source/src/child-view-container.js","/source/src/collection-view.js","/source/src/composite-view.js","/source/src/behavior.js","/source/src/application.js","/source/src/app-router.js","/source/src/backbone.marionette.js"],"names":["getEventName","match","prefix","eventName","toUpperCase","getOnMethodName","event","replace","splitter","triggerMethod","methodName","method","getOption","call","this","result","_","isFunction","apply","drop","arguments","trigger","triggerMethodOn","context","fnc","triggerMethodChildren","view","shouldTrigger","_getImmediateChildren","each","child","shouldTriggerAttach","_isAttached","shouldAttach","shouldTriggerDetach","shouldDetach","monitorViewEvents","handleBeforeAttach","handleAttach","triggerDOMRefresh","handleBeforeDetach","handleDetach","handleRender","_isRendered","_areViewEventsMonitored","on","before:attach","attach","before:detach","detach","render","bindFromStrings","target","entity","evt","methods","actionName","methodNames","split","MarionetteError","iterateEvents","bindings","isObject","message","url","isString","bindEvents","unbindEvents","iterateReplies","channel","normalizedRadioRequests","normalizeMethods","bindRequests","unbindRequests","getBehaviorClass","options","key","behaviorClass","Marionette","Behaviors","behaviorsLookup","parseBehaviors","behaviors","chain","map","BehaviorClass","_options","behavior","nestedBehaviors","concat","flatten","value","uniqueName","selector","uniqueId","join","buildViewTrigger","triggerDef","shouldPreventDefault","preventDefault","shouldStopPropagation","stopPropagation","e","destroyBackboneView","supportsDestroyLifecycle","remove","_isDestroyed","isEnabled","name","FEATURES","setEnabled","state","proxy","_len","length","args","Array","_key","extend","Backbone","Model","deprecate","test","prev","next","DEV_MODE","undefined","_cache","_warn","_console","console","warn","log","noop","isNodeAttached","el","$","contains","document","documentElement","mergeOptions","keys","pick","optionName","hash","_this","reduce","normalizedHash","memoize","errorProps","Error","urlRoot","version","constructor","error","captureStackTrace","toString","setOptions","CommonMixin","_setOptions","RadioMixin","_initRadio","channelName","Radio","_channel","radioEvents","radioRequests","_destroyRadio","stopReplying","getChannel","ClassOptions","MarionetteObject","cid","cidPrefix","initialize","prototype","Events","isDestroyed","destroy","stopListening","TemplateCache","templateId","templateCaches","get","cachedTemplate","load","clear","i","compiledTemplate","template","loadTemplate","compileTemplate","$template","html","rawTemplate","_invoke","invokeMap","invoke","BehaviorsMixin","_initBehaviors","_behaviors","_getBehaviorTriggers","triggers","toConsumableArray","_getBehaviorEvents","events","_proxyBehaviorViewProperties","_delegateBehaviorEntityEvents","_undelegateBehaviorEntityEvents","_destroyBehaviors","_bindBehaviorUIElements","_unbindBehaviorUIElements","_triggerEventOnBehaviors","DelegateEntityEventsMixin","_delegateEntityEvents","model","collection","_undelegateEntityEvents","modelEvents","collectionEvents","delegateEventSplitter","getUniqueEventName","TriggersMixin","_getViewTriggers","_normalizeUIKeys","ui","memo","val","normalizedKey","normalizeUIString","uiString","r","slice","_normalizeUIValues","properties","isArray","property","propertyVal","UIMixin","normalizeUIKeys","uiBindings","_getUIBindings","normalizeUIValues","_bindUIElements","_uiBindings","_ui","_unbindUIElements","_this2","$el","_getUI","ViewMixin","supportsRenderLifecycle","isRendered","isAttached","setElement","hasEl","View","delegateEvents","eventsArg","_buildEventProxies","viewEvents","_getEvents","combinedEvents","getTriggers","delegateEntityEvents","undelegateEntityEvents","_ensureViewIsIntact","unbindUIElements","_removeElement","_removeChildren","bindUIElements","getUI","childViewEventPrefix","_len2","_key2","ret","_triggerMethod","_triggerEventOnParentLayout","_childViewEvents","_childViewTriggers","layoutView","_parentView","eventPrefix","prefixedEventName","_len3","_key3","childViewEvents","childViewTriggers","parent","_parent","Region","replaceElement","_isReplaced","_initEl","getEl","show","_ensureElement","_ensureView","currentView","empty","_renderView","_attachView","shouldReplaceEl","attachHtml","allowMissingEl","_replaceEl","_restoreEl","parentNode","replaceChild","isReplaced","shouldReplace","appendChild","off","_removeView","detachHtml","_ref","preventDestroy","shouldPreventDestroy","_detachView","contents","hasView","reset","RegionsMixin","regionClass","_initRegions","regions","_regions","addRegions","_reInitRegions","addRegion","definition","isEmpty","_addRegions","regionDefinitions","_buildRegion","_addRegion","_buildRegionFromDefinition","_buildRegionFromObject","_buildRegionFromRegionClass","RegionClass","omit","defaults","parentEl","partial","region","removeRegion","_removeRegion","removeRegions","getRegions","bind","emptyRegions","hasRegion","getRegion","clone","showChildView","getChildView","Renderer","data","templateFunc","serializeData","serializeModel","items","serializeCollection","attributes","_renderTemplate","getTemplate","mixinTemplateContext","attachElContent","templateContext","compact","emulateCollection","object","listProperty","list","values","toArray","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","add","customIndex","_add","viewCid","findByModel","findByModelCid","modelCid","findByCid","findByCustom","index","findByIndex","_remove","some","size","CollectionView","sort","once","_initialEvents","_initChildViewStorage","_bufferedChildren","_startBuffering","_isBuffering","_endBuffering","triggerOnChildren","attachBuffer","_createBuffer","children","listenTo","_onCollectionAdd","_onCollectionRemove","_sortViews","opts","at","indexOf","filter","_filteredSortedModels","_shouldAddChild","_destroyEmptyView","ChildView","_getChildView","_addChild","removeChildView","_checkEmpty","_renderChildren","setFilter","preventRender","canBeRendered","filterChanged","shouldRender","previousModels","models","_applyModelDeltas","removeFilter","currentIds","addedChildNotExists","prevModel","removedChildExists","reorder","_showingEmptyView","anyModelsAdded","elsToReorder","_index","filteredOutViews","_appendReorderedChildren","resortView","reorderOnSort","_this3","orderChanged","find","item","_emptyViewIndex","append","_destroyChildren","checkEmpty","processedModels","_showEmptyView","_showCollection","_this4","addedAt","viewComparator","getViewComparator","Math","min","max","addedModel","_sortModelsBy","splice","_filterModels","_this5","comparator","sortBy","EmptyView","_getEmptyView","emptyViewOptions","childViewOptions","buildChildView","_addChildView","emptyView","_getView","childView","_getChildViewOptions","addChildView","_updateIndices","increment","laterView","_proxyChildEvents","ChildViewClass","collectionView","buffer","elBuffer","createDocumentFragment","b","_insertBefore","_insertAfter","findPosition","before","ChildViewContainer","_ref2","shouldCheckEmpty","childViews","identity","_this6","childEventName","CompositeView","renderChildren","_isRendering","resetChildViewContainer","compositeView","$container","getChildViewContainer","containerView","$childViewContainer","container","childViewContainer","charAt","substr","MixinFromView","Behavior","proxyViewProperties","getEvents","behaviorEvents","behaviorHandler","behaviorTriggers","Application","_initRegion","_region","showView","getView","start","AppRouter","Router","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","appRoute","route","_addAppRoute","routeName","routeArgs","onRoute","routePath","invert","routeNames","reverse","previousMarionette","noConflict","Object","VERSION"],"mappings":"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","file":"backbone.marionette.min.js","sourcesContent":["// Trigger Method\n// --------------\n\nimport _         from 'underscore';\nimport getOption from './get-option';\n\n// split the event name on the \":\"\nconst splitter = /(^|:)(\\w)/gi;\n\nfunction getEventName(match, prefix, eventName) {\n  return eventName.toUpperCase();\n}\n\n// take the event section (\"section1:section2:section3\")\n// and turn it in to uppercase name onSection1Section2Section3\nfunction getOnMethodName(event) {\n  return 'on' + event.replace(splitter, getEventName);\n}\n\ngetOnMethodName = _.memoize(getOnMethodName);\n\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nexport function triggerMethod(event) {\n  // get the method name from the event name\n  const methodName = getOnMethodName(event);\n\n  const method = getOption.call(this, methodName);\n\n  let result;\n\n  if (_.isFunction(method)) {\n    result = method.apply(this, _.drop(arguments));\n  }\n\n  // trigger the event\n  this.trigger.apply(this, arguments);\n\n  return result;\n}\n\n// triggerMethodOn invokes triggerMethod on a specific context\n//\n// e.g. `Marionette.triggerMethodOn(view, 'show')`\n// will trigger a \"show\" event or invoke onShow the view.\nexport function triggerMethodOn(context) {\n  const fnc = _.isFunction(context.triggerMethod) ? context.triggerMethod : triggerMethod;\n  return fnc.apply(context, _.drop(arguments));\n}\n","// DOM Refresh\n// -----------\n\nimport _ from 'underscore';\nimport { triggerMethodOn } from './trigger-method';\n\n// Trigger method on children unless a pure Backbone.View\nfunction triggerMethodChildren(view, event, shouldTrigger) {\n  if (!view._getImmediateChildren) { return; }\n  _.each(view._getImmediateChildren(), child => {\n    if (!shouldTrigger(child)) { return; }\n    triggerMethodOn(child, event, child);\n  });\n}\n\nfunction shouldTriggerAttach(view) {\n  return !view._isAttached;\n}\n\nfunction shouldAttach(view) {\n  if (!shouldTriggerAttach(view)) { return false; }\n  view._isAttached = true;\n  return true;\n}\n\nfunction shouldTriggerDetach(view) {\n  return view._isAttached;\n}\n\nfunction shouldDetach(view) {\n  if (!shouldTriggerDetach(view)) { return false; }\n  view._isAttached = false;\n  return true;\n}\n\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\n// whenever a rendered view is attached or an attached view is rendered.\nfunction monitorViewEvents(view) {\n  if (view._areViewEventsMonitored) { return; }\n\n  view._areViewEventsMonitored = true;\n\n  function handleBeforeAttach() {\n    triggerMethodChildren(view, 'before:attach', shouldTriggerAttach);\n  }\n\n  function handleAttach() {\n    triggerMethodChildren(view, 'attach', shouldAttach);\n    triggerDOMRefresh();\n  }\n\n  function handleBeforeDetach() {\n    triggerMethodChildren(view, 'before:detach', shouldTriggerDetach);\n  }\n\n  function handleDetach() {\n    triggerMethodChildren(view, 'detach', shouldDetach);\n  }\n\n  function handleRender() {\n    triggerDOMRefresh();\n  }\n\n  function triggerDOMRefresh() {\n    if (view._isAttached && view._isRendered) {\n      triggerMethodOn(view, 'dom:refresh', view);\n    }\n  }\n\n  view.on({\n    'before:attach': handleBeforeAttach,\n    'attach': handleAttach,\n    'before:detach': handleBeforeDetach,\n    'detach': handleDetach,\n    'render': handleRender\n  });\n}\n\nexport default monitorViewEvents;\n","// Bind Entity Events & Unbind Entity Events\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\n//\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n// any object that has Backbone.Events mixed in) to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\nimport _               from 'underscore';\nimport MarionetteError from '../error';\n\n// Bind/unbind the event to handlers specified as a string of\n// handler names on the target object\nfunction bindFromStrings(target, entity, evt, methods, actionName) {\n  const methodNames = methods.split(/\\s+/);\n\n  _.each(methodNames, function(methodName) {\n    const method = target[methodName];\n    if (!method) {\n      throw new MarionetteError(`Method \"${methodName}\" was configured as an event handler, but does not exist.`);\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\n// generic looping function\nfunction iterateEvents(target, entity, bindings, actionName) {\n  if (!entity || !bindings) { return; }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindevents'\n    });\n  }\n\n  // iterate the bindings and bind/unbind them\n  _.each(bindings, function(method, evt) {\n\n    // allow for a list of method names as a string\n    if (_.isString(method)) {\n      bindFromStrings(target, entity, evt, method, actionName);\n      return;\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\nfunction bindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'listenTo');\n  return this;\n}\n\nfunction unbindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'stopListening');\n  return this;\n}\n\n// Export Public API\nexport {\n  bindEvents,\n  unbindEvents\n};\n","// Bind/Unbind Radio Requests\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone.radio request\n// to methods on a target object.\n//\n// The first parameter, `target`, will set the context of the reply method\n//\n// The second parameter is the `Radio.channel` to bind the reply to.\n//\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\n// configuration. A function can be supplied instead of a string handler name.\n\nimport _ from 'underscore';\nimport normalizeMethods from './normalize-methods';\nimport MarionetteError from '../error';\n\nfunction iterateReplies(target, channel, bindings, actionName) {\n  if (!channel || !bindings) { return; }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindrequests'\n    });\n  }\n\n  const normalizedRadioRequests = normalizeMethods.call(target, bindings);\n\n  channel[actionName](normalizedRadioRequests, target);\n}\n\nfunction bindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'reply');\n  return this;\n}\n\nfunction unbindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'stopReplying');\n  return this;\n}\n\nexport {\n  bindRequests,\n  unbindRequests\n};\n","import _                        from 'underscore';\nimport _invoke                  from '../utils/invoke';\nimport { triggerMethod }        from '../common/trigger-method';\nimport Marionette               from '../backbone.marionette';\n\n// MixinOptions\n// - behaviors\n\n// Takes care of getting the behavior class\n// given options and a key.\n// If a user passes in options.behaviorClass\n// default to using that.\n// If a user passes in a Behavior Class directly, use that\n// Otherwise delegate the lookup to the users `behaviorsLookup` implementation.\nfunction getBehaviorClass(options, key) {\n  if (options.behaviorClass) {\n    return options.behaviorClass;\n    //treat functions as a Behavior constructor\n  } else if (_.isFunction(options)) {\n    return options;\n  }\n\n  // behaviorsLookup can be either a flat object or a method\n  if (_.isFunction(Marionette.Behaviors.behaviorsLookup)) {\n    return Marionette.Behaviors.behaviorsLookup(options, key)[key];\n  }\n\n  return Marionette.Behaviors.behaviorsLookup[key];\n}\n\n// Iterate over the behaviors object, for each behavior\n// instantiate it and get its grouped behaviors.\n// This accepts a list of behaviors in either an object or array form\nfunction parseBehaviors(view, behaviors) {\n  return _.chain(behaviors).map(function(options, key) {\n    const BehaviorClass = getBehaviorClass(options, key);\n    //if we're passed a class directly instead of an object\n    const _options = options === BehaviorClass ? {} : options;\n    const behavior = new BehaviorClass(_options, view);\n    const nestedBehaviors = parseBehaviors(view, _.result(behavior, 'behaviors'));\n\n    return [behavior].concat(nestedBehaviors);\n  }).flatten().value();\n}\n\nexport default {\n  _initBehaviors() {\n    const behaviors = _.result(this, 'behaviors');\n\n    // Behaviors defined on a view can be a flat object literal\n    // or it can be a function that returns an object.\n    this._behaviors = _.isObject(behaviors) ? parseBehaviors(this, behaviors) : {};\n  },\n\n  _getBehaviorTriggers() {\n    const triggers = _invoke(this._behaviors, 'getTriggers');\n    return _.extend({}, ...triggers);\n  },\n\n  _getBehaviorEvents() {\n    const events = _invoke(this._behaviors, 'getEvents');\n    return _.extend({}, ...events);\n  },\n\n  // proxy behavior $el to the view's $el.\n  _proxyBehaviorViewProperties() {\n    _invoke(this._behaviors, 'proxyViewProperties');\n  },\n\n  // delegate modelEvents and collectionEvents\n  _delegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'delegateEntityEvents');\n  },\n\n  // undelegate modelEvents and collectionEvents\n  _undelegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'undelegateEntityEvents');\n  },\n\n  _destroyBehaviors(args) {\n    // Call destroy on each behavior after\n    // destroying the view.\n    // This unbinds event listeners\n    // that behaviors have registered for.\n    _invoke(this._behaviors, 'destroy', ...args);\n  },\n\n  _bindBehaviorUIElements() {\n    _invoke(this._behaviors, 'bindUIElements');\n  },\n\n  _unbindBehaviorUIElements() {\n    _invoke(this._behaviors, 'unbindUIElements');\n  },\n\n  _triggerEventOnBehaviors(...args) {\n    const behaviors = this._behaviors;\n    // Use good ol' for as this is a very hot function\n    for (let i = 0, length = behaviors && behaviors.length; i < length; i++) {\n      triggerMethod.apply(behaviors[i], args);\n    }\n  }\n};\n","import _ from 'underscore';\n\n// Borrow event splitter from Backbone\nconst delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nfunction uniqueName(eventName, selector) {\n  return [eventName + _.uniqueId('.evt'), selector].join(' ');\n}\n\n// Set event name to be namespaced using a unique index\n// to generate a non colliding event namespace\n// http://api.jquery.com/event.namespace/\nconst getUniqueEventName = function(eventName) {\n  const match = eventName.match(delegateEventSplitter);\n  return uniqueName(match[1], match[2]);\n};\n\nexport default getUniqueEventName;\n","import _ from 'underscore';\nimport getUniqueEventName from '../utils/get-unique-event-name';\n\n// Internal method to create an event handler for a given `triggerDef` like\n// 'click:foo'\nfunction buildViewTrigger(view, triggerDef) {\n  if (_.isString(triggerDef)) {\n    triggerDef = {event: triggerDef};\n  }\n\n  const eventName = triggerDef.event;\n  const shouldPreventDefault = triggerDef.preventDefault !== false;\n  const shouldStopPropagation = triggerDef.stopPropagation !== false;\n\n  return function(e) {\n    if (shouldPreventDefault) {\n      e.preventDefault();\n    }\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n\n    view.triggerMethod(eventName, view);\n  };\n}\n\nexport default {\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  _getViewTriggers(view, triggers) {\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return _.reduce(triggers, (events, value, key) => {\n      key = getUniqueEventName(key);\n      events[key] = buildViewTrigger(view, value);\n      return events;\n    }, {});\n  }\n\n};\n","import { triggerMethodOn } from '../common/trigger-method';\n\nexport default function destroyBackboneView(view) {\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'before:destroy', view);\n  }\n\n  const shouldTriggerDetach = !!view._isAttached;\n\n  if (shouldTriggerDetach) {\n    triggerMethodOn(view, 'before:detach', view);\n  }\n\n  view.remove();\n\n  if (shouldTriggerDetach) {\n    view._isAttached = false;\n    triggerMethodOn(view, 'detach', view);\n  }\n\n  view._isDestroyed = true;\n\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'destroy', view);\n  }\n}\n","import MarionetteError          from '../error';\n\n// Placeholder method to be extended by the user.\n// The method should define the object that stores the behaviors.\n// i.e.\n//\n// ```js\n// Marionette.Behaviors.behaviorsLookup: function() {\n//   return App.Behaviors\n// }\n// ```\nexport default function behaviorsLookup() {\n  throw new MarionetteError({\n    message: 'You must define where your behaviors are stored.',\n    url: 'marionette.behaviors.md#behaviorslookup'\n  });\n}\n","// Add Feature flags here\n// e.g. 'class' => false\nconst FEATURES = {\n};\n\nfunction isEnabled(name) {\n  return !!FEATURES[name];\n}\n\nfunction setEnabled(name, state) {\n  return FEATURES[name] = state;\n}\n\nexport {\n  FEATURES,\n  setEnabled,\n  isEnabled\n};\n","//Internal utility for creating context style global utils\nconst proxy = function(method) {\n  return function(context, ...args) {\n    return method.apply(context, args);\n  };\n};\n\nexport default proxy;\n","// Marionette.extend\n// -----------------\n\nimport Backbone from 'backbone';\n\n// Borrow the Backbone `extend` method so we can use it as needed\nconst extend = Backbone.Model.extend;\n\nexport default extend;\n","/* global console */\n\nimport _ from 'underscore';\n\nimport Marionette from '../backbone.marionette';\n\nconst deprecate = function(message, test) {\n  if (_.isObject(message)) {\n    message = (\n      message.prev + ' is going to be removed in the future. ' +\n      'Please use ' + message.next + ' instead.' +\n      (message.url ? ' See: ' + message.url : '')\n    );\n  }\n\n  if (!Marionette.DEV_MODE) {\n    return;\n  }\n\n  if ((test === undefined || !test) && !deprecate._cache[message]) {\n    deprecate._warn('Deprecation warning: ' + message);\n    deprecate._cache[message] = true;\n  }\n};\n\ndeprecate._console = typeof console !== 'undefined' ? console : {};\ndeprecate._warn = function() {\n  const warn = deprecate._console.warn || deprecate._console.log || _.noop;\n  return warn.apply(deprecate._console, arguments);\n};\ndeprecate._cache = {};\n\nexport default deprecate;\n","// Marionette.isNodeAttached\n// -------------------------\n\nimport Backbone from 'backbone';\n\n// Determine if `el` is a child of the document\nconst isNodeAttached = function(el) {\n  return Backbone.$.contains(document.documentElement, el);\n};\n\nexport default isNodeAttached;\n","import _ from 'underscore';\n\n// Merge `keys` from `options` onto `this`\nconst mergeOptions = function(options, keys) {\n  if (!options) { return; }\n  _.extend(this, _.pick(options, keys));\n};\n\nexport default mergeOptions;\n","// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from the\n// object or its `options`, with `options` taking precedence.\nconst getOption = function(optionName) {\n  if (!optionName) { return; }\n  if (this.options && (this.options[optionName] !== undefined)) {\n    return this.options[optionName];\n  } else {\n    return this[optionName];\n  }\n};\n\nexport default getOption;\n","import _ from 'underscore';\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nconst normalizeMethods = function(hash) {\n  return _.reduce(hash, (normalizedHash, method, name) => {\n    if (!_.isFunction(method)) {\n      method = this[method];\n    }\n    if (method) {\n      normalizedHash[name] = method;\n    }\n    return normalizedHash;\n  }, {});\n};\n\nexport default normalizeMethods;\n","// Error\n// -----\n\nimport _      from 'underscore';\nimport extend from './utils/extend';\nimport {version} from '../package.json';\n\nconst errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n\nconst MarionetteError = extend.call(Error, {\n  urlRoot: `http://marionettejs.com/docs/v${version}/`,\n\n  constructor(message, options) {\n    if (_.isObject(message)) {\n      options = message;\n      message = options.message;\n    } else if (!options) {\n      options = {};\n    }\n\n    const error = Error.call(this, message);\n    _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n    this.captureStackTrace();\n\n    if (options.url) {\n      this.url = this.urlRoot + options.url;\n    }\n  },\n\n  captureStackTrace() {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, MarionetteError);\n    }\n  },\n\n  toString() {\n    return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n  }\n});\n\nMarionetteError.extend = extend;\n\nexport default MarionetteError;\n","import _ from 'underscore';\n\n// Internal utility for setting options consistently across Mn\nconst setOptions = function(...args) {\n  this.options = _.extend({}, _.result(this, 'options'), ...args);\n};\n\nexport default setOptions;\n","import _setOptions              from '../utils/set-options';\nimport getOption                from '../common/get-option';\nimport mergeOptions             from '../common/merge-options';\nimport normalizeMethods         from '../common/normalize-methods';\nimport {\n  bindEvents,\n  unbindEvents\n}                               from '../common/bind-events';\n\nexport default {\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods: normalizeMethods,\n\n  _setOptions: _setOptions,\n\n  // A handy way to merge passed-in options onto the instance\n  mergeOptions: mergeOptions,\n\n  // Enable getting options from this or this.options by name.\n  getOption: getOption,\n\n  // Enable binding view's events from another entity.\n  bindEvents: bindEvents,\n\n  // Enable unbinding view's events from another entity.\n  unbindEvents: unbindEvents\n};\n","import _ from 'underscore';\nimport Radio from 'backbone.radio';\n\nimport {\n  bindRequests,\n  unbindRequests\n} from '../common/bind-requests';\n\nimport {\n  bindEvents,\n  unbindEvents\n} from '../common/bind-events';\n\nimport MarionetteError from '../error';\n\n// MixinOptions\n// - channelName\n// - radioEvents\n// - radioRequests\n\nexport default {\n\n  _initRadio() {\n    const channelName = _.result(this, 'channelName');\n\n    if (!channelName) {\n      return;\n    }\n\n    /* istanbul ignore next */\n    if (!Radio) {\n      throw new MarionetteError({\n        name: 'BackboneRadioMissing',\n        message: 'The dependency \"backbone.radio\" is missing.'\n      });\n    }\n\n    const channel = this._channel = Radio.channel(channelName);\n\n    const radioEvents = _.result(this, 'radioEvents');\n    this.bindEvents(channel, radioEvents);\n\n    const radioRequests = _.result(this, 'radioRequests');\n    this.bindRequests(channel, radioRequests);\n\n    this.on('destroy', this._destroyRadio);\n  },\n\n  _destroyRadio() {\n    this._channel.stopReplying(null, null, this);\n  },\n\n  getChannel() {\n    return this._channel;\n  },\n\n  // Proxy `bindEvents`\n  bindEvents: bindEvents,\n\n  // Proxy `unbindEvents`\n  unbindEvents: unbindEvents,\n\n  // Proxy `bindRequests`\n  bindRequests: bindRequests,\n\n  // Proxy `unbindRequests`\n  unbindRequests: unbindRequests\n\n};\n","// Object\n// ------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport extend from './utils/extend';\nimport { triggerMethod } from './common/trigger-method';\nimport CommonMixin from './mixins/common';\nimport RadioMixin from './mixins/radio';\n\nconst ClassOptions = [\n  'channelName',\n  'radioEvents',\n  'radioRequests'\n];\n\n// A Base Class that other Classes should descend from.\n// Object borrows many conventions and utilities from Backbone.\nconst MarionetteObject = function(options) {\n  this._setOptions(options);\n  this.mergeOptions(options, ClassOptions);\n  this.cid = _.uniqueId(this.cidPrefix);\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nMarionetteObject.extend = extend;\n\n// Object Methods\n// --------------\n\n// Ensure it can trigger events with Backbone.Events\n_.extend(MarionetteObject.prototype, Backbone.Events, CommonMixin, RadioMixin, {\n  cidPrefix: 'mno',\n\n  // for parity with Marionette.AbstractView lifecyle\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return this._isDestroyed;\n  },\n\n  //this is a noop method intended to be overridden by classes that extend from this base\n  initialize() {},\n\n  destroy(...args) {\n    if (this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:destroy', this, ...args);\n\n    this._isDestroyed = true;\n    this.triggerMethod('destroy', this, ...args);\n    this.stopListening();\n\n    return this;\n  },\n\n  triggerMethod: triggerMethod\n});\n\nexport default MarionetteObject;\n","// Template Cache\n// --------------\n\nimport _               from 'underscore';\nimport Backbone        from 'backbone';\nimport MarionetteError from './error';\n\n// Manage templates stored in `<script>` blocks,\n// caching them for faster access.\nconst TemplateCache = function(templateId) {\n  this.templateId = templateId;\n};\n\n// TemplateCache object-level methods. Manage the template\n// caches from these method calls instead of creating\n// your own TemplateCache instances\n_.extend(TemplateCache, {\n  templateCaches: {},\n\n  // Get the specified template by id. Either\n  // retrieves the cached version, or loads it\n  // from the DOM.\n  get(templateId, options) {\n    let cachedTemplate = this.templateCaches[templateId];\n\n    if (!cachedTemplate) {\n      cachedTemplate = new TemplateCache(templateId);\n      this.templateCaches[templateId] = cachedTemplate;\n    }\n\n    return cachedTemplate.load(options);\n  },\n\n  // Clear templates from the cache. If no arguments\n  // are specified, clears all templates:\n  // `clear()`\n  //\n  // If arguments are specified, clears each of the\n  // specified templates from the cache:\n  // `clear(\"#t1\", \"#t2\", \"...\")`\n  clear(...args) {\n    let i;\n    const length = args.length;\n\n    if (length > 0) {\n      for (i = 0; i < length; i++) {\n        delete this.templateCaches[args[i]];\n      }\n    } else {\n      this.templateCaches = {};\n    }\n  }\n});\n\n// TemplateCache instance methods, allowing each\n// template cache object to manage its own state\n// and know whether or not it has been loaded\n_.extend(TemplateCache.prototype, {\n\n  // Internal method to load the template\n  load(options) {\n    // Guard clause to prevent loading this template more than once\n    if (this.compiledTemplate) {\n      return this.compiledTemplate;\n    }\n\n    // Load the template and compile it\n    const template = this.loadTemplate(this.templateId, options);\n    this.compiledTemplate = this.compileTemplate(template, options);\n\n    return this.compiledTemplate;\n  },\n\n  // Load a template from the DOM, by default. Override\n  // this method to provide your own template retrieval\n  // For asynchronous loading with AMD/RequireJS, consider\n  // using a template-loader plugin as described here:\n  // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n  loadTemplate(templateId, options) {\n    const $template = Backbone.$(templateId);\n\n    if (!$template.length) {\n      throw new MarionetteError({\n        name: 'NoTemplateError',\n        message: `Could not find template: \"${templateId}\"`\n      });\n    }\n    return $template.html();\n  },\n\n  // Pre-compile the template before caching it. Override\n  // this method if you do not need to pre-compile a template\n  // (JST / RequireJS for example) or if you want to change\n  // the template engine used (Handebars, etc).\n  compileTemplate(rawTemplate, options) {\n    return _.template(rawTemplate, options);\n  }\n});\n\nexport default TemplateCache;\n","// Implementation of the invoke method (http://underscorejs.org/#invoke) with support for\n// lodash v3, v4, and underscore.js\nimport _ from 'underscore';\n\nexport default _.invokeMap || _.invoke;\n","import _ from 'underscore';\n\nimport {\n  bindEvents,\n  unbindEvents\n} from '../common/bind-events';\n\n// MixinOptions\n// - collectionEvents\n// - modelEvents\n\nexport default {\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  _delegateEntityEvents(model, collection) {\n    this._undelegateEntityEvents(model, collection);\n\n    const modelEvents = _.result(this, 'modelEvents');\n    bindEvents.call(this, model, modelEvents);\n\n    const collectionEvents = _.result(this, 'collectionEvents');\n    bindEvents.call(this, collection, collectionEvents);\n  },\n\n  _undelegateEntityEvents(model, collection) {\n    const modelEvents = _.result(this, 'modelEvents');\n    unbindEvents.call(this, model, modelEvents);\n\n    const collectionEvents = _.result(this, 'collectionEvents');\n    unbindEvents.call(this, collection, collectionEvents);\n  }\n};\n","import _ from 'underscore';\n// allows for the use of the @ui. syntax within\n// a given key for triggers and events\n// swaps the @ui with the associated selector.\n// Returns a new, non-mutated, parsed events hash.\nconst normalizeUIKeys = function(hash, ui) {\n  return _.reduce(hash, (memo, val, key) => {\n    const normalizedKey = normalizeUIString(key, ui);\n    memo[normalizedKey] = val;\n    return memo;\n  }, {});\n};\n\n// utility method for parsing @ui. syntax strings\n// into associated selector\nconst normalizeUIString = function(uiString, ui) {\n  return uiString.replace(/@ui\\.[a-zA-Z-_$0-9]*/g, (r) => {\n    return ui[r.slice(4)];\n  });\n};\n\n// allows for the use of the @ui. syntax within\n// a given value for regions\n// swaps the @ui with the associated selector\nconst normalizeUIValues = function(hash, ui, properties) {\n  _.each(hash, (val, key) => {\n    if (_.isString(val)) {\n      hash[key] = normalizeUIString(val, ui);\n    } else if (_.isObject(val) && _.isArray(properties)) {\n      _.extend(val, normalizeUIValues(_.pick(val, properties), ui));\n      /* Value is an object, and we got an array of embedded property names to normalize. */\n      _.each(properties, (property) => {\n        const propertyVal = val[property];\n        if (_.isString(propertyVal)) {\n          val[property] = normalizeUIString(propertyVal, ui);\n        }\n      });\n    }\n  });\n  return hash;\n};\n\nexport default {\n\n  // normalize the keys of passed hash with the views `ui` selectors.\n  // `{\"@ui.foo\": \"bar\"}`\n  normalizeUIKeys(hash) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIKeys(hash, uiBindings);\n  },\n\n  // normalize the values of passed hash with the views `ui` selectors.\n  // `{foo: \"@ui.bar\"}`\n  normalizeUIValues(hash, properties) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIValues(hash, uiBindings, properties);\n  },\n\n  _getUIBindings() {\n    const uiBindings = _.result(this, '_uiBindings');\n    const ui = _.result(this, 'ui');\n    return uiBindings || ui;\n  },\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  _bindUIElements() {\n    if (!this.ui) { return; }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings) {\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    const bindings = _.result(this, '_uiBindings');\n\n    // empty the ui so we don't have anything to start with\n    this._ui = {};\n\n    // bind each of the selectors\n    _.each(bindings, (selector, key) => {\n      this._ui[key] = this.$(selector);\n    });\n\n    this.ui = this._ui;\n  },\n\n  _unbindUIElements() {\n    if (!this.ui || !this._uiBindings) { return; }\n\n    // delete all of the existing ui bindings\n    _.each(this.ui, ($el, name) => {\n      delete this.ui[name];\n    });\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n    delete this._ui;\n  },\n\n  _getUI(name) {\n    return this._ui[name];\n  }\n};\n","// ViewMixin\n//  ---------\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport isNodeAttached from '../common/is-node-attached';\nimport { triggerMethod } from '../common/trigger-method';\nimport BehaviorsMixin from './behaviors';\nimport CommonMixin from './common';\nimport DelegateEntityEventsMixin from './delegate-entity-events';\nimport TriggersMixin from './triggers';\nimport UIMixin from './ui';\nimport View from '../view';\nimport MarionetteError from '../error';\n\n// MixinOptions\n// - behaviors\n// - childViewEventPrefix\n// - childViewEvents\n// - childViewTriggers\n// - collectionEvents\n// - modelEvents\n// - triggers\n// - ui\n\n\nconst ViewMixin = {\n  supportsRenderLifecycle: true,\n  supportsDestroyLifecycle: true,\n\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return !!this._isDestroyed;\n  },\n\n  _isRendered: false,\n\n  isRendered() {\n    return !!this._isRendered;\n  },\n\n  _isAttached: false,\n\n  isAttached() {\n    return !!this._isAttached;\n  },\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // rendered or attached on setElement.\n  setElement() {\n    const hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isRendered = !!this.$el.length;\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    return this;\n  },\n\n  // Overriding Backbone.View's `delegateEvents` to handle\n  // `events` and `triggers`\n  delegateEvents(eventsArg) {\n\n    this._proxyBehaviorViewProperties();\n    this._buildEventProxies();\n\n    const viewEvents = this._getEvents(eventsArg);\n\n    if (typeof eventsArg === 'undefined') {\n      this.events = viewEvents;\n    }\n\n    const combinedEvents = _.extend({},\n      this._getBehaviorEvents(),\n      viewEvents,\n      this._getBehaviorTriggers(),\n      this.getTriggers()\n    );\n\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n\n    return this;\n  },\n\n  _getEvents(eventsArg) {\n    const events = eventsArg || this.events;\n\n    if (_.isFunction(events)) {\n      return this.normalizeUIKeys(events.call(this));\n    }\n\n    return this.normalizeUIKeys(events);\n  },\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  getTriggers() {\n    if (!this.triggers) { return; }\n\n    // Allow `triggers` to be configured as a function\n    const triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return this._getViewTriggers(this, triggers);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.model, this.collection);\n\n    // bind each behaviors model and collection events\n    this._delegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.model, this.collection);\n\n    // unbind each behaviors model and collection events\n    this._undelegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Internal helper method to verify whether the view hasn't been destroyed\n  _ensureViewIsIntact() {\n    if (this._isDestroyed) {\n      throw new MarionetteError({\n        name: 'ViewDestroyedError',\n        message: `View (cid: \"${this.cid}\") has already been destroyed and cannot be used.`\n      });\n    }\n  },\n\n  // Handle destroying the view and its children.\n  destroy(...args) {\n    if (this._isDestroyed) { return this; }\n    const shouldTriggerDetach = !!this._isAttached;\n\n    this.triggerMethod('before:destroy', this, ...args);\n    if (shouldTriggerDetach) {\n      this.triggerMethod('before:detach', this);\n    }\n\n    // unbind UI elements\n    this.unbindUIElements();\n\n    // remove the view from the DOM\n    // https://github.com/jashkenas/backbone/blob/1.2.3/backbone.js#L1235\n    this._removeElement();\n\n    if (shouldTriggerDetach) {\n      this._isAttached = false;\n      this.triggerMethod('detach', this);\n    }\n\n    // remove children after the remove to prevent extra paints\n    this._removeChildren();\n\n    this._destroyBehaviors(args);\n\n    this._isDestroyed = true;\n    this._isRendered = false;\n    this.triggerMethod('destroy', this, ...args);\n\n    this.stopListening();\n\n    return this;\n  },\n\n  bindUIElements() {\n    this._bindUIElements();\n    this._bindBehaviorUIElements();\n\n    return this;\n  },\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements() {\n    this._unbindUIElements();\n    this._unbindBehaviorUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    this._ensureViewIsIntact();\n    return this._getUI(name);\n  },\n\n  // used as the prefix for child view events\n  // that are forwarded through the layoutview\n  childViewEventPrefix: 'childview',\n\n  // import the `triggerMethod` to trigger events with corresponding\n  // methods if the method exists\n  triggerMethod(...args) {\n    const ret = triggerMethod.apply(this, args);\n\n    this._triggerEventOnBehaviors(...args);\n    this._triggerEventOnParentLayout(...args);\n\n    return ret;\n  },\n\n  // Cache `childViewEvents` and `childViewTriggers`\n  _buildEventProxies() {\n    this._childViewEvents = _.result(this, 'childViewEvents');\n    this._childViewTriggers = _.result(this, 'childViewTriggers');\n  },\n\n  _triggerEventOnParentLayout(eventName, ...args) {\n    const layoutView = this._parentView();\n    if (!layoutView) {\n      return;\n    }\n\n    // invoke triggerMethod on parent view\n    const eventPrefix = _.result(layoutView, 'childViewEventPrefix');\n    const prefixedEventName = eventPrefix + ':' + eventName;\n\n    layoutView.triggerMethod(prefixedEventName, ...args);\n\n    // use the parent view's childViewEvents handler\n    const childViewEvents = layoutView.normalizeMethods(layoutView._childViewEvents);\n\n    if (!!childViewEvents && _.isFunction(childViewEvents[eventName])) {\n      childViewEvents[eventName].apply(layoutView, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    const childViewTriggers = layoutView._childViewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if (childViewTriggers && _.isString(childViewTriggers[eventName])) {\n      layoutView.triggerMethod(childViewTriggers[eventName], ...args);\n    }\n  },\n\n  // Walk the _parent tree until we find a view (if one exists).\n  // Returns the parent view hierarchically closest to this view.\n  _parentView() {\n    let parent = this._parent;\n\n    while (parent) {\n      if (parent instanceof View) {\n        return parent;\n      }\n      parent = parent._parent;\n    }\n  }\n};\n\n_.extend(ViewMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TriggersMixin,  UIMixin);\n\nexport default ViewMixin;\n","// Region\n// ------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport destroyBackboneView from './utils/destroy-backbone-view';\nimport monitorViewEvents from './common/monitor-view-events';\nimport isNodeAttached from './common/is-node-attached';\nimport { triggerMethodOn } from './common/trigger-method';\nimport MarionetteObject from './object';\nimport MarionetteError from './error';\n\nconst ClassOptions = [\n  'allowMissingEl',\n  'parentEl',\n  'replaceElement'\n];\n\nconst Region = MarionetteObject.extend({\n  cidPrefix: 'mnr',\n  replaceElement: false,\n  _isReplaced: false,\n\n  constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    // getOption necessary because options.el may be passed as undefined\n    this._initEl = this.el = this.getOption('el');\n\n    // Handle when this.el is passed in as a $ wrapped element.\n    this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n    if (!this.el) {\n      throw new MarionetteError({\n        name: 'NoElError',\n        message: 'An \"el\" must be specified for a region.'\n      });\n    }\n\n    this.$el = this.getEl(this.el);\n    MarionetteObject.call(this, options);\n  },\n\n  // Displays a backbone view instance inside of the region. Handles calling the `render`\n  // method for you. Reads content directly from the `el` attribute. The `preventDestroy`\n  // option can be used to prevent a view from the old view being destroyed on show.\n  show(view, options) {\n    if (!this._ensureElement(options)) {\n      return;\n    }\n    this._ensureView(view);\n    if (view === this.currentView) { return this; }\n\n    this.triggerMethod('before:show', this, view, options);\n\n    monitorViewEvents(view);\n\n    this.empty(options);\n\n    // We need to listen for if a view is destroyed in a way other than through the region.\n    // If this happens we need to remove the reference to the currentView since once a view\n    // has been destroyed we can not reuse it.\n    view.on('destroy', this.empty, this);\n\n    // Make this region the view's parent.\n    // It's important that this parent binding happens before rendering so that any events\n    // the child may trigger during render can also be triggered on the child's ancestor views.\n    view._parent = this;\n\n    this._renderView(view);\n\n    this._attachView(view, options);\n\n    this.triggerMethod('show', this, view, options);\n    return this;\n  },\n\n  _renderView(view) {\n    if (view._isRendered) {\n      return;\n    }\n\n    if (!view.supportsRenderLifecycle) {\n      triggerMethodOn(view, 'before:render', view);\n    }\n\n    view.render();\n\n    if (!view.supportsRenderLifecycle) {\n      view._isRendered = true;\n      triggerMethodOn(view, 'render', view);\n    }\n  },\n\n  _attachView(view, options = {}) {\n    const shouldTriggerAttach = !view._isAttached && isNodeAttached(this.el);\n    const shouldReplaceEl = typeof options.replaceElement === 'undefined' ? !!_.result(this, 'replaceElement') : !!options.replaceElement;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    this.attachHtml(view, shouldReplaceEl);\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n\n    this.currentView = view;\n  },\n\n  _ensureElement(options = {}) {\n    if (!_.isObject(this.el)) {\n      this.$el = this.getEl(this.el);\n      this.el = this.$el[0];\n    }\n\n    if (!this.$el || this.$el.length === 0) {\n      const allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!_.result(this, 'allowMissingEl') : !!options.allowMissingEl;\n\n      if (allowMissingEl) {\n        return false;\n      } else {\n        throw new MarionetteError(`An \"el\" must exist in DOM for this region ${this.cid}`);\n      }\n    }\n    return true;\n  },\n\n  _ensureView(view) {\n    if (!view) {\n      throw new MarionetteError({\n        name: 'ViewNotValid',\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n      });\n    }\n\n    if (view._isDestroyed) {\n      throw new MarionetteError({\n        name: 'ViewDestroyedError',\n        message: `View (cid: \"${view.cid}\") has already been destroyed and cannot be used.`\n      });\n    }\n  },\n\n  // Override this method to change how the region finds the DOM element that it manages. Return\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\n  getEl(el) {\n    return Backbone.$(el, _.result(this, 'parentEl'));\n  },\n\n  _replaceEl(view) {\n    // always restore the el to ensure the regions el is present before replacing\n    this._restoreEl();\n\n    const parent = this.el.parentNode;\n\n    parent.replaceChild(view.el, this.el);\n    this._isReplaced = true;\n  },\n\n  // Restore the region's element in the DOM.\n  _restoreEl() {\n    // There is nothing to replace\n    if (!this._isReplaced) {\n      return;\n    }\n\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    const parent = view.el.parentNode;\n\n    if (!parent) {\n      return;\n    }\n\n    parent.replaceChild(this.el, view.el);\n    this._isReplaced = false;\n  },\n\n  // Check to see if the region's el was replaced.\n  isReplaced() {\n    return !!this._isReplaced;\n  },\n\n  // Override this method to change how the new view is appended to the `$el` that the\n  // region is managing\n  attachHtml(view, shouldReplace) {\n    if (shouldReplace) {\n      // replace the region's node with the view's node\n      this._replaceEl(view);\n    } else {\n      this.el.appendChild(view.el);\n    }\n  },\n\n  // Destroy the current view, if there is one. If there is no current view, it does\n  // nothing and returns immediately.\n  empty(options = { allowMissingEl: true }) {\n    const view = this.currentView;\n\n    // If there is no view in the region we should only detach current html\n    if (!view) {\n      if (this._ensureElement(options)) {\n        this.detachHtml();\n      }\n      return this;\n    }\n\n    view.off('destroy', this.empty, this);\n    this.triggerMethod('before:empty', this, view);\n\n    this._restoreEl();\n\n    delete this.currentView;\n\n    if (!view._isDestroyed) {\n      this._removeView(view, options);\n      delete view._parent;\n    }\n\n    this.triggerMethod('empty', this, view);\n    return this;\n  },\n\n  _removeView(view, {preventDestroy} = {}) {\n    const shouldPreventDestroy = !!preventDestroy;\n\n    if (shouldPreventDestroy) {\n      this._detachView(view);\n      return;\n    }\n\n    if (view.destroy) {\n      view.destroy();\n    } else {\n      destroyBackboneView(view);\n    }\n  },\n\n  _detachView(view) {\n    const shouldTriggerDetach = !!view._isAttached;\n    if (shouldTriggerDetach) {\n      triggerMethodOn(view, 'before:detach', view);\n    }\n\n    this.detachHtml();\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      triggerMethodOn(view, 'detach', view);\n    }\n  },\n\n  // Override this method to change how the region detaches current content\n  detachHtml() {\n    this.$el.contents().detach();\n  },\n\n  // Checks whether a view is currently present within the region. Returns `true` if there is\n  // and `false` if no view is present.\n  hasView() {\n    return !!this.currentView;\n  },\n\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\n  // The next time a view is shown via this region, the region will re-query the DOM for\n  // the region's `el`.\n  reset(options) {\n    this.empty(options);\n\n    if (this.$el) {\n      this.el = this._initEl;\n    }\n\n    delete this.$el;\n    return this;\n  },\n\n  destroy(options) {\n    this.reset(options);\n    return MarionetteObject.prototype.destroy.apply(this, arguments);\n  }\n});\n\nexport default Region;\n","import _                    from 'underscore';\nimport _invoke              from '../utils/invoke';\nimport Region               from '../region';\nimport MarionetteError      from '../error';\n\n// MixinOptions\n// - regions\n// - regionClass\n\nexport default {\n  regionClass: Region,\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this View.\n  _initRegions() {\n\n    // init regions hash\n    this.regions =  this.regions || {};\n    this._regions = {};\n\n    this.addRegions(_.result(this, 'regions'));\n  },\n\n  // Internal method to re-initialize all of the regions by updating\n  // the `el` that they point to\n  _reInitRegions() {\n    _invoke(this._regions, 'reset');\n  },\n\n  // Add a single region, by name, to the View\n  addRegion(name, definition) {\n    const regions = {};\n    regions[name] = definition;\n    return this.addRegions(regions)[name];\n  },\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions(regions) {\n    // If there's nothing to add, stop here.\n    if (_.isEmpty(regions)) {\n      return;\n    }\n\n    // Normalize region selectors hash to allow\n    // a user to use the @ui. syntax.\n    regions = this.normalizeUIValues(regions, ['selector', 'el']);\n\n    // Add the regions definitions to the regions property\n    this.regions = _.extend({}, this.regions, regions);\n\n    return this._addRegions(regions);\n  },\n\n  // internal method to build and add regions\n  _addRegions(regionDefinitions) {\n    return _.reduce(regionDefinitions, (regions, definition, name) => {\n      regions[name] = this._buildRegion(definition);\n      this._addRegion(regions[name], name);\n      return regions;\n    }, {});\n  },\n\n  // return the region instance from the definition\n  _buildRegion(definition) {\n    if (definition instanceof Region) {\n      return definition;\n    }\n\n    return this._buildRegionFromDefinition(definition);\n  },\n\n  _buildRegionFromDefinition(definition) {\n    if (_.isString(definition)) {\n      return this._buildRegionFromObject({el: definition});\n    }\n\n    if (_.isFunction(definition)) {\n      return this._buildRegionFromRegionClass(definition);\n    }\n\n    if (_.isObject(definition)) {\n      return this._buildRegionFromObject(definition);\n    }\n\n    throw new MarionetteError({\n      message: 'Improper region configuration type.',\n      url: 'marionette.region.html#region-configuration-types'\n    });\n  },\n\n  _buildRegionFromObject(definition) {\n    const RegionClass = definition.regionClass || this.regionClass;\n\n    const options = _.omit(definition, 'regionClass');\n\n    _.defaults(options, {\n      el: definition.selector,\n      parentEl: _.partial(_.result, this, 'el')\n    });\n\n    return new RegionClass(options);\n  },\n\n  // Build the region directly from a given `RegionClass`\n  _buildRegionFromRegionClass(RegionClass) {\n    return new RegionClass({\n      parentEl: _.partial(_.result, this, 'el')\n    });\n  },\n\n  _addRegion(region, name) {\n    this.triggerMethod('before:add:region', this, name, region);\n\n    region._parent = this;\n\n    this._regions[name] = region;\n\n    this.triggerMethod('add:region', this, name, region);\n  },\n\n  // Remove a single region from the View, by name\n  removeRegion(name) {\n    const region = this._regions[name];\n\n    this._removeRegion(region, name);\n\n    return region;\n  },\n\n  // Remove all regions from the View\n  removeRegions() {\n    const regions = this.getRegions();\n\n    _.each(this._regions, _.bind(this._removeRegion, this));\n\n    return regions;\n  },\n\n  _removeRegion(region, name) {\n    this.triggerMethod('before:remove:region', this, name, region);\n\n    region.empty();\n    region.stopListening();\n\n    delete this.regions[name];\n    delete this._regions[name];\n\n    this.triggerMethod('remove:region', this, name, region);\n  },\n\n  // Empty all regions in the region manager, but\n  // leave them attached\n  emptyRegions() {\n    const regions = this.getRegions();\n    _invoke(regions, 'empty');\n    return regions;\n  },\n\n  // Checks to see if view contains region\n  // Accepts the region name\n  // hasRegion('main')\n  hasRegion(name) {\n    return !!this.getRegion(name);\n  },\n\n  // Provides access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion(name) {\n    return this._regions[name];\n  },\n\n  // Get all regions\n  getRegions() {\n    return _.clone(this._regions);\n  },\n\n  showChildView(name, view, ...args) {\n    const region = this.getRegion(name);\n    return region.show(view, ...args);\n  },\n\n  getChildView(name) {\n    return this.getRegion(name).currentView;\n  }\n\n};\n","// Renderer\n// --------\n\nimport _               from 'underscore';\nimport MarionetteError from '../error';\nimport TemplateCache   from '../template-cache';\n\n// Render a template with data by passing in the template\n// selector and the data to render.\nconst Renderer = {\n\n  // Render a template with data. The `template` parameter is\n  // passed to the `TemplateCache` object to retrieve the\n  // template function. Override this method to provide your own\n  // custom rendering and template handling for all of Marionette.\n  render(template, data) {\n    if (!template) {\n      throw new MarionetteError({\n        name: 'TemplateNotFoundError',\n        message: 'Cannot render the template since its false, null or undefined.'\n      });\n    }\n\n    const templateFunc = _.isFunction(template) ? template : TemplateCache.get(template);\n\n    return templateFunc(data);\n  }\n};\n\nexport default Renderer;\n","// View\n// ---------\n\nimport _                  from 'underscore';\nimport Backbone           from 'backbone';\nimport monitorViewEvents  from './common/monitor-view-events';\nimport ViewMixin          from './mixins/view';\nimport RegionsMixin       from './mixins/regions';\nimport Renderer           from './config/renderer';\n\nconst ClassOptions = [\n  'behaviors',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewTriggers',\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'regionClass',\n  'regions',\n  'template',\n  'templateContext',\n  'triggers',\n  'ui'\n];\n\n// The standard view. Includes view events, automatic rendering\n// of Underscore templates, nested views, and more.\nconst View = Backbone.View.extend({\n\n  constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this._initRegions();\n\n    const args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n  },\n\n  // Serialize the view's model *or* collection, if\n  // it exists, for the template\n  serializeData() {\n    if (!this.model && !this.collection) {\n      return {};\n    }\n\n    // If we have a model, we serialize that\n    if (this.model) {\n      return this.serializeModel();\n    }\n\n    // Otherwise, we serialize the collection,\n    // making it available under the `items` property\n    return {\n      items: this.serializeCollection()\n    };\n  },\n\n  // Prepares the special `model` property of a view\n  // for being displayed in the template. By default\n  // we simply clone the attributes. Override this if\n  // you need a custom transformation for your view's model\n  serializeModel() {\n    if (!this.model) { return {}; }\n    return _.clone(this.model.attributes);\n  },\n\n  // Serialize a collection by cloning each of\n  // its model's attributes\n  serializeCollection() {\n    if (!this.collection) { return {}; }\n    return this.collection.map(function(model) { return _.clone(model.attributes); });\n  },\n\n  // Render the view, defaulting to underscore.js templates.\n  // You can override this in your view definition to provide\n  // a very specific rendering for your view. In general, though,\n  // you should override the `Marionette.Renderer` object to\n  // change how Marionette renders views.\n  // Subsequent renders after the first will re-render all nested\n  // views.\n  render() {\n    this._ensureViewIsIntact();\n\n    this.triggerMethod('before:render', this);\n\n    // If this is not the first render call, then we need to\n    // re-initialize the `el` for each region\n    if (this._isRendered) {\n      this._reInitRegions();\n    }\n\n    this._renderTemplate();\n    this.bindUIElements();\n\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n\n    return this;\n  },\n\n  // Internal method to render the template with the serialized data\n  // and template context via the `Marionette.Renderer` object.\n  _renderTemplate() {\n    const template = this.getTemplate();\n\n    // Allow template-less views\n    if (template === false) {\n      return;\n    }\n\n    // Add in entity data and template context\n    const data = this.mixinTemplateContext(this.serializeData());\n\n    // Render and add to el\n    const html = Renderer.render(template, data, this);\n    this.attachElContent(html);\n  },\n\n  // Get the template for this view\n  // instance. You can set a `template` attribute in the view\n  // definition or pass a `template: \"whatever\"` parameter in\n  // to the constructor options.\n  getTemplate() {\n    return this.template;\n  },\n\n  // Mix in template context methods. Looks for a\n  // `templateContext` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateContext(target = {}) {\n    const templateContext = _.result(this, 'templateContext');\n    return _.extend(target, templateContext);\n  },\n\n  // Attaches the content of a given view.\n  // This method can be overridden to optimize rendering,\n  // or to render in a non standard way.\n  //\n  // For example, using `innerHTML` instead of `$el.html`\n  //\n  // ```js\n  // attachElContent(html) {\n  //   this.el.innerHTML = html;\n  //   return this;\n  // }\n  // ```\n  attachElContent(html) {\n    this.$el.html(html);\n\n    return this;\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this.removeRegions();\n  },\n\n  _getImmediateChildren() {\n    return _.chain(this.getRegions())\n      .map('currentView')\n      .compact()\n      .value();\n  }\n});\n\n_.extend(View.prototype, ViewMixin, RegionsMixin);\n\nexport default View;\n","// Mix in methods from Underscore, for iteration, and other\n// collection related features.\n// Borrowing this code from Backbone.Collection:\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\n\nimport _ from 'underscore';\n\nconst methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n                'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n                'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n                'last', 'without', 'isEmpty', 'pluck', 'reduce'];\n\nconst emulateCollection = function(object, listProperty) {\n  _.each(methods, function(method) {\n    object[method] = function() {\n      const list = _.values(_.result(this, listProperty));\n      const args = [list].concat(_.toArray(arguments));\n      return _[method].apply(_, args);\n    };\n  });\n};\n\nexport default emulateCollection;\n","import _ from 'underscore';\nimport emulateCollection from './utils/emulate-collection';\n\n// Provide a container to store, retrieve and\n// shut down child views.\nconst Container = function(views) {\n  this._views = {};\n  this._indexByModel = {};\n  this._indexByCustom = {};\n  this._updateLength();\n\n  _.each(views, _.bind(this.add, this));\n};\n\nemulateCollection(Container.prototype, '_views');\n\n// Container Methods\n// -----------------\n\n_.extend(Container.prototype, {\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Optionally specify\n  // a custom key to store an retrieve the view.\n  add(view, customIndex) {\n    return this._add(view, customIndex)._updateLength();\n  },\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _add(view, customIndex) {\n    const viewCid = view.cid;\n\n    // store the view\n    this._views[viewCid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = viewCid;\n    }\n\n    // index by custom\n    if (customIndex) {\n      this._indexByCustom[customIndex] = viewCid;\n    }\n\n    return this;\n  },\n\n  // Find a view by the model that was attached to\n  // it. Uses the model's `cid` to find it.\n  findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n  // Find a view by the `cid` of the model that was attached to\n  // it. Uses the model's `cid` to find the view `cid` and\n  // retrieve the view using it.\n  findByModelCid(modelCid) {\n    const viewCid = this._indexByModel[modelCid];\n    return this.findByCid(viewCid);\n  },\n\n  // Find a view by a custom indexer.\n  findByCustom(index) {\n    const viewCid = this._indexByCustom[index];\n    return this.findByCid(viewCid);\n  },\n\n  // Find by index. This is not guaranteed to be a\n  // stable index.\n  findByIndex(index) {\n    return _.values(this._views)[index];\n  },\n\n  // retrieve a view by its `cid` directly\n  findByCid(cid) {\n    return this._views[cid];\n  },\n\n  // Remove a view\n  remove(view) {\n    return this._remove(view)._updateLength();\n  },\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _remove(view) {\n    const viewCid = view.cid;\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // delete custom index\n    _.some(this._indexByCustom, _.bind(function(cid, key) {\n      if (cid === viewCid) {\n        delete this._indexByCustom[key];\n        return true;\n      }\n    }, this));\n\n    // remove the view from the container\n    delete this._views[viewCid];\n\n    return this;\n  },\n\n  // Update the `.length` attribute on this container\n  _updateLength() {\n    this.length = _.size(this._views);\n\n    return this;\n  }\n});\n\nexport default Container;\n","// Collection View\n// ---------------\n\nimport _                  from 'underscore';\nimport Backbone           from 'backbone';\nimport destroyBackboneView from './utils/destroy-backbone-view';\nimport monitorViewEvents  from './common/monitor-view-events';\nimport { triggerMethodOn } from './common/trigger-method';\nimport ChildViewContainer from './child-view-container';\nimport MarionetteError    from './error';\nimport ViewMixin          from './mixins/view';\n\nconst ClassOptions = [\n  'behaviors',\n  'childView',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewOptions',\n  'childViewTriggers',\n  'collectionEvents',\n  'events',\n  'filter',\n  'emptyView',\n  'emptyViewOptions',\n  'modelEvents',\n  'reorderOnSort',\n  'sort',\n  'triggers',\n  'ui',\n  'viewComparator'\n];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nconst CollectionView = Backbone.View.extend({\n\n  // flag for maintaining the sorted order of the collection\n  sort: true,\n\n  // constructor\n  // option to pass `{sort: false}` to prevent the `CollectionView` from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  //\n  // option to pass `{viewComparator: compFunction()}` to allow the `CollectionView`\n  // to use a custom sort order for the collection.\n  constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this.once('render', this._initialEvents);\n    this._initChildViewStorage();\n    this._bufferedChildren = [];\n\n    const args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n  },\n\n  // Instead of inserting elements one by one into the page, it's much more performant to insert\n  // elements into a document fragment and then insert that document fragment into the page\n  _startBuffering() {\n    this._isBuffering = true;\n  },\n\n  _endBuffering() {\n    const shouldTriggerAttach = !!this._isAttached;\n    const triggerOnChildren = shouldTriggerAttach ? this._getImmediateChildren() : [];\n\n    this._isBuffering = false;\n\n    _.each(triggerOnChildren, child => {\n      triggerMethodOn(child, 'before:attach', child);\n    });\n\n    this.attachBuffer(this, this._createBuffer());\n\n    _.each(triggerOnChildren, child => {\n      child._isAttached = true;\n      triggerMethodOn(child, 'attach', child);\n    });\n\n    this._bufferedChildren = [];\n  },\n\n  _getImmediateChildren() {\n    return _.values(this.children._views);\n  },\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents() {\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n      this.listenTo(this.collection, 'reset', this.render);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n  // Handle a child added to the collection\n  _onCollectionAdd(child, collection, opts) {\n    // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2\n    let index = opts.at !== undefined && (opts.index || collection.indexOf(child));\n\n    // When filtered or when there is no initial index, calculate index.\n    if (this.filter || index === false) {\n      index = _.indexOf(this._filteredSortedModels(index), child);\n    }\n\n    if (this._shouldAddChild(child, index)) {\n      this._destroyEmptyView();\n      const ChildView = this._getChildView(child);\n      this._addChild(child, ChildView, index);\n    }\n  },\n\n  // get the child view by model it holds, and remove it\n  _onCollectionRemove(model) {\n    const view = this.children.findByModel(model);\n    this.removeChildView(view);\n    this._checkEmpty();\n  },\n\n  // Render children views. Override this method to provide your own implementation of a\n  // render function for the collection view.\n  render() {\n    this._ensureViewIsIntact();\n    this.triggerMethod('before:render', this);\n    this._renderChildren();\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n  // An efficient rendering used for filtering. Instead of modifying the whole DOM for the\n  // collection view, we are only adding or removing the related childrenViews.\n  setFilter(filter, {preventRender} = {}) {\n    const canBeRendered = this._isRendered && !this._isDestroyed;\n    const filterChanged = this.filter !== filter;\n    const shouldRender = canBeRendered && filterChanged && !preventRender;\n\n    if (shouldRender) {\n      const previousModels = this._filteredSortedModels();\n      this.filter = filter;\n      const models = this._filteredSortedModels();\n      this._applyModelDeltas(models, previousModels);\n    } else {\n      this.filter = filter;\n    }\n\n    return this;\n  },\n\n  // `removeFilter` is actually an alias for removing filters.\n  removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n\n  // Calculate and apply difference by cid between `models` and `previousModels`.\n  _applyModelDeltas(models, previousModels) {\n    const currentIds = {};\n    _.each(models, (model, index) => {\n      const addedChildNotExists = !this.children.findByModel(model);\n      if (addedChildNotExists) {\n        this._onCollectionAdd(model, this.collection, {at: index});\n      }\n      currentIds[model.cid] = true;\n    });\n    _.each(previousModels, (prevModel) => {\n      const removedChildExists = !currentIds[prevModel.cid] && this.children.findByModel(prevModel);\n      if (removedChildExists) {\n        this._onCollectionRemove(prevModel);\n      }\n    });\n  },\n\n  // Reorder DOM after sorting. When your element's rendering do not use their index,\n  // you can pass reorderOnSort: true to only reorder the DOM after a sort instead of\n  // rendering all the collectionView.\n  reorder() {\n    const children = this.children;\n    const models = this._filteredSortedModels();\n\n    if (!models.length && this._showingEmptyView) { return this; }\n\n    const anyModelsAdded = _.some(models, function(model) {\n      return !children.findByModel(model);\n    });\n\n    // If there are any new models added due to filtering we need to add child views,\n    // so render as normal.\n    if (anyModelsAdded) {\n      this.render();\n    } else {\n      // Get the DOM nodes in the same order as the models.\n      const elsToReorder = _.map(models, function(model, index) {\n        const view = children.findByModel(model);\n        view._index = index;\n        return view.el;\n      });\n\n      // Find the views that were children before but aren't in this new ordering.\n      const filteredOutViews = children.filter(function(view) {\n        return !_.contains(elsToReorder, view.el);\n      });\n\n      this.triggerMethod('before:reorder', this);\n\n      // Since append moves elements that are already in the DOM, appending the elements\n      // will effectively reorder them.\n      this._appendReorderedChildren(elsToReorder);\n\n      // remove any views that have been filtered out\n      _.each(filteredOutViews, _.bind(this.removeChildView, this));\n      this._checkEmpty();\n\n      this.triggerMethod('reorder', this);\n    }\n    return this;\n  },\n\n  // Render view after sorting. Override this method to change how the view renders\n  // after a `sort` on the collection.\n  resortView() {\n    if (this.reorderOnSort) {\n      this.reorder();\n    } else {\n      this._renderChildren();\n    }\n    return this;\n  },\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will render.\n  _sortViews() {\n    const models = this._filteredSortedModels();\n\n    // check for any changes in sort order of views\n    const orderChanged = _.find(models, (item, index) => {\n      const view = this.children.findByModel(item);\n      return !view || view._index !== index;\n    });\n\n    if (orderChanged) {\n      this.resortView();\n    }\n  },\n\n  // Internal reference to what index a `emptyView` is.\n  _emptyViewIndex: -1,\n\n  // Internal method. Separated so that CompositeView can append to the childViewContainer\n  // if necessary\n  _appendReorderedChildren(children) {\n    this.$el.append(children);\n  },\n\n  // Internal method. Separated so that CompositeView can have more control over events\n  // being triggered, around the rendering process\n  _renderChildren() {\n    if (this._isRendered) {\n      this._destroyEmptyView();\n      this._destroyChildren({checkEmpty: false});\n    }\n\n    const models = this._filteredSortedModels();\n    if (this.isEmpty({processedModels: models})) {\n      this._showEmptyView();\n    } else {\n      this.triggerMethod('before:render:children', this);\n      this._startBuffering();\n      this._showCollection(models);\n      this._endBuffering();\n      this.triggerMethod('render:children', this);\n    }\n  },\n\n  // Internal method to loop through collection and show each child view.\n  _showCollection(models) {\n    _.each(models, (child, index) => {\n      const ChildView = this._getChildView(child);\n      this._addChild(child, ChildView, index);\n    });\n  },\n\n  // Allow the collection to be sorted by a custom view comparator\n  _filteredSortedModels(addedAt) {\n    if (!this.collection || !this.collection.length) { return []; }\n\n    const viewComparator = this.getViewComparator();\n    let models = this.collection.models;\n    addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);\n\n    if (viewComparator) {\n      let addedModel;\n      // Preserve `at` location, even for a sorted view\n      if (addedAt) {\n        addedModel = models[addedAt];\n        models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));\n      }\n      models = this._sortModelsBy(models, viewComparator);\n      if (addedModel) {\n        models.splice(addedAt, 0, addedModel);\n      }\n    }\n\n    // Filter after sorting in case the filter uses the index\n    models = this._filterModels(models);\n\n    return models;\n  },\n\n  getViewComparator() {\n    return this.viewComparator;\n  },\n\n  // Filter an array of models, if a filter exists\n  _filterModels(models) {\n    if (this.filter) {\n      models = _.filter(models, (model, index) => {\n        return this._shouldAddChild(model, index);\n      });\n    }\n    return models;\n  },\n\n  _sortModelsBy(models, comparator) {\n    if (typeof comparator === 'string') {\n      return _.sortBy(models, (model) => {\n        return model.get(comparator);\n      });\n    } else if (comparator.length === 1) {\n      return _.sortBy(models, _.bind(comparator, this));\n    } else {\n      return models.sort(_.bind(comparator, this));\n    }\n  },\n\n  // Internal method to show an empty view in place of a collection of child views,\n  // when the collection is empty\n  _showEmptyView() {\n    const EmptyView = this._getEmptyView();\n\n    if (EmptyView && !this._showingEmptyView) {\n      this._showingEmptyView = true;\n\n      const model = new Backbone.Model();\n      let emptyViewOptions =\n        this.emptyViewOptions || this.childViewOptions;\n      if (_.isFunction(emptyViewOptions)) {\n        emptyViewOptions = emptyViewOptions.call(this, model, this._emptyViewIndex);\n      }\n\n      const view = this.buildChildView(model, EmptyView, emptyViewOptions);\n\n      this.triggerMethod('before:render:empty', this, view);\n      this._addChildView(view, 0);\n      this.triggerMethod('render:empty', this, view);\n\n      view._parent = this;\n    }\n  },\n\n  // Internal method to destroy an existing emptyView instance if one exists. Called when\n  // a collection view has been rendered empty, and then a child is added to the collection.\n  _destroyEmptyView() {\n    if (this._showingEmptyView) {\n      this.triggerMethod('before:remove:empty', this);\n\n      this._destroyChildren();\n      delete this._showingEmptyView;\n\n      this.triggerMethod('remove:empty', this);\n    }\n  },\n\n  // Retrieve the empty view class\n  _getEmptyView() {\n    const emptyView = this.emptyView;\n\n    if (!emptyView) { return; }\n\n    return this._getView(emptyView);\n  },\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView(child) {\n    let childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'NoChildViewError',\n        message: 'A \"childView\" must be specified'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n\n  // Internal method for building and adding a child view\n  _addChild(child, ChildView, index) {\n    const childViewOptions = this._getChildViewOptions(child, index);\n\n    const view = this.buildChildView(child, ChildView, childViewOptions);\n\n    this.addChildView(view, index);\n\n    return view;\n  },\n\n  _getChildViewOptions(child, index) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child, index);\n    }\n\n    return this.childViewOptions;\n  },\n\n  // Render the child's view and add it to the HTML for the collection view at a given index.\n  // This will also update the indices of later views in the collection in order to keep the\n  // children in sync with the collection.\n  addChildView(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n\n    // increment indices of views after this one\n    this._updateIndices(view, true, index);\n\n    view._parent = this;\n\n    this._addChildView(view, index);\n\n    this.triggerMethod('add:child', this, view);\n\n    return view;\n  },\n\n  // Internal method. This decrements or increments the indices of views after the added/removed\n  // view to keep in sync with the collection.\n  _updateIndices(view, increment, index) {\n    if (!this.sort) {\n      return;\n    }\n\n    if (increment) {\n      // assign the index to the view\n      view._index = index;\n    }\n\n    // update the indexes of views after this one\n    this.children.each((laterView) => {\n      if (laterView._index >= view._index) {\n        laterView._index += increment ? 1 : -1;\n      }\n    });\n  },\n\n  // Internal Method. Add the view to children and render it at the given index.\n  _addChildView(view, index) {\n    // Only trigger attach if already attached and not buffering,\n    // otherwise _endBuffering() or Region#show() handles this.\n    const shouldTriggerAttach = !this._isBuffering && this._isAttached;\n\n    monitorViewEvents(view);\n\n    // set up the child view event forwarding\n    this._proxyChildEvents(view);\n\n    // Store the child view itself so we can properly remove and/or destroy it later\n    this.children.add(view);\n\n    if (!view.supportsRenderLifecycle) {\n      triggerMethodOn(view, 'before:render', view);\n    }\n\n    // Render view\n    view.render();\n\n    if (!view.supportsRenderLifecycle) {\n      view._isRendered = true;\n      triggerMethodOn(view, 'render', view);\n    }\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    // Attach view\n    this.attachHtml(this, view, index);\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n  },\n\n  // Build a `childView` for a model in the collection.\n  buildChildView(child, ChildViewClass, childViewOptions) {\n    const options = _.extend({model: child}, childViewOptions);\n    return new ChildViewClass(options);\n  },\n\n  // Remove the child view and destroy it. This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  removeChildView(view) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    this.triggerMethod('before:remove:child', this, view);\n\n    if (view.destroy) {\n      view.destroy();\n    } else {\n      destroyBackboneView(view);\n    }\n\n    delete view._parent;\n    this.stopListening(view);\n    this.children.remove(view);\n    this.triggerMethod('remove:child', this, view);\n\n    // decrement the index of views after this one\n    this._updateIndices(view, false);\n\n    return view;\n  },\n\n  // check if the collection is empty or optionally whether an array of pre-processed models is empty\n  isEmpty(options) {\n    let models;\n    if (_.result(options, 'processedModels')) {\n      models = options.processedModels;\n    } else {\n      models = this.collection ? this.collection.models : [];\n      models = this._filterModels(models);\n    }\n    return models.length === 0;\n  },\n\n  // If empty, show the empty view\n  _checkEmpty() {\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n  },\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer(collectionView, buffer) {\n    collectionView.$el.append(buffer);\n  },\n\n  // Create a fragment buffer from the currently buffered children\n  _createBuffer() {\n    const elBuffer = document.createDocumentFragment();\n    _.each(this._bufferedChildren, (b) => {\n      elBuffer.appendChild(b.el);\n    });\n    return elBuffer;\n  },\n\n  // Append the HTML to the collection's `el`. Override this method to do something other\n  // than `.append`.\n  attachHtml(collectionView, childView, index) {\n    if (collectionView._isBuffering) {\n      // buffering happens on reset events and initial renders\n      // in order to reduce the number of inserts into the\n      // document, which are expensive.\n      collectionView._bufferedChildren.splice(index, 0, childView);\n    } else {\n      // If we've already rendered the main collection, append\n      // the new child into the correct order if we need to. Otherwise\n      // append to the end.\n      if (!collectionView._insertBefore(childView, index)) {\n        collectionView._insertAfter(childView);\n      }\n    }\n  },\n\n  // Internal method. Check whether we need to insert the view into the correct position.\n  _insertBefore(childView, index) {\n    let currentView;\n    const findPosition = this.sort && (index < this.children.length - 1);\n    if (findPosition) {\n      // Find the view after this one\n      currentView = this.children.find((view) => {\n        return view._index === index + 1;\n      });\n    }\n\n    if (currentView) {\n      currentView.$el.before(childView.el);\n      return true;\n    }\n\n    return false;\n  },\n\n  // Internal method. Append a view to the end of the $el\n  _insertAfter(childView) {\n    this.$el.append(childView.el);\n  },\n\n  // Internal method to set up the `children` object for storing all of the child views\n  _initChildViewStorage() {\n    this.children = new ChildViewContainer();\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this._destroyChildren({checkEmpty: false});\n  },\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren({checkEmpty} = {}) {\n    this.triggerMethod('before:destroy:children', this);\n    const shouldCheckEmpty = checkEmpty !== false;\n    const childViews = this.children.map(_.identity);\n\n    this.children.each(_.bind(this.removeChildView, this));\n\n    if (shouldCheckEmpty) {\n      this._checkEmpty();\n    }\n\n    this.triggerMethod('destroy:children', this);\n    return childViews;\n  },\n\n  // Return true if the given child should be shown. Return false otherwise.\n  // The filter will be passed (child, index, collection), where\n  //  'child' is the given model\n  //  'index' is the index of that model in the collection\n  //  'collection' is the collection referenced by this CollectionView\n  _shouldAddChild(child, index) {\n    const filter = this.filter;\n    return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\n  },\n\n  // Set up the child view event forwarding. Uses a \"childview:\" prefix in front of all forwarded events.\n  _proxyChildEvents(view) {\n    const prefix = _.result(this, 'childViewEventPrefix');\n\n    // Forward all child view events through the parent,\n    // prepending \"childview:\" to the event name\n    this.listenTo(view, 'all', (eventName, ...args) => {\n\n      const childEventName = prefix + ':' + eventName;\n\n      const childViewEvents = this.normalizeMethods(this._childViewEvents);\n\n      // call collectionView childViewEvent if defined\n      if (typeof childViewEvents !== 'undefined' && _.isFunction(childViewEvents[eventName])) {\n        childViewEvents[eventName].apply(this, args);\n      }\n\n      // use the parent view's proxyEvent handlers\n      const childViewTriggers = this._childViewTriggers;\n\n      // Call the event with the proxy name on the parent layout\n      if (childViewTriggers && _.isString(childViewTriggers[eventName])) {\n        this.triggerMethod(childViewTriggers[eventName], ...args);\n      }\n\n      this.triggerMethod(childEventName, ...args);\n    });\n  }\n});\n\n_.extend(CollectionView.prototype, ViewMixin);\n\nexport default CollectionView;\n","// Composite View\n// --------------\n\nimport _               from 'underscore';\nimport deprecate       from './utils/deprecate';\nimport MarionetteError from './error';\nimport CollectionView  from './collection-view';\nimport View            from './view';\n\nconst ClassOptions = [\n  'childViewContainer',\n  'template',\n  'templateContext'\n];\n\n// Used for rendering a branch-leaf, hierarchical structure.\n// Extends directly from CollectionView\n// @deprecated\nconst CompositeView = CollectionView.extend({\n\n  // Setting up the inheritance chain which allows changes to\n  // Marionette.CollectionView.prototype.constructor which allows overriding\n  // option to pass '{sort: false}' to prevent the CompositeView from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  constructor(options) {\n    deprecate('CompositeView is deprecated. Convert to View at your earliest convenience');\n\n    this.mergeOptions(options, ClassOptions);\n\n    CollectionView.prototype.constructor.apply(this, arguments);\n  },\n\n  // Configured the initial events that the composite view\n  // binds to. Override this method to prevent the initial\n  // events, or to add your own initial events.\n  _initialEvents() {\n\n    // Bind only after composite view is rendered to avoid adding child views\n    // to nonexistent childViewContainer\n\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n      this.listenTo(this.collection, 'reset', this.renderChildren);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n  // Retrieve the `childView` to be used when rendering each of\n  // the items in the collection. The default is to return\n  // `this.childView` or Marionette.CompositeView if no `childView`\n  // has been defined. As happens in CollectionView, `childView` can\n  // be a function (which should return a view class).\n  _getChildView(child) {\n    let childView = this.childView;\n\n    // for CompositeView, if `childView` is not specified, we'll get the same\n    // composite view class rendered for each child in the collection\n    // then check if the `childView` is a view class (the common case)\n    // finally check if it's a function (which we assume that returns a view class)\n    if (!childView) {\n      return this.constructor;\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n  // Return the serialized model\n  serializeData() {\n    return this.serializeModel();\n  },\n\n  // Renders the model and the collection.\n  render() {\n    this._ensureViewIsIntact();\n    this._isRendering = true;\n    this.resetChildViewContainer();\n\n    this.triggerMethod('before:render', this);\n\n    this._renderTemplate();\n    this.bindUIElements();\n    this.renderChildren();\n\n    this._isRendering = false;\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n  renderChildren() {\n    if (this._isRendered || this._isRendering) {\n      CollectionView.prototype._renderChildren.call(this);\n    }\n  },\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer(compositeView, buffer) {\n    const $container = this.getChildViewContainer(compositeView);\n    $container.append(buffer);\n  },\n\n  // Internal method. Append a view to the end of the $el.\n  // Overidden from CollectionView to ensure view is appended to\n  // childViewContainer\n  _insertAfter(childView) {\n    const $container = this.getChildViewContainer(this, childView);\n    $container.append(childView.el);\n  },\n\n  // Internal method. Append reordered childView'.\n  // Overidden from CollectionView to ensure reordered views\n  // are appended to childViewContainer\n  _appendReorderedChildren(children) {\n    const $container = this.getChildViewContainer(this);\n    $container.append(children);\n  },\n\n  // Internal method to ensure an `$childViewContainer` exists, for the\n  // `attachHtml` method to use.\n  getChildViewContainer(containerView, childView) {\n    if (!!containerView.$childViewContainer) {\n      return containerView.$childViewContainer;\n    }\n\n    let container;\n    const childViewContainer = containerView.childViewContainer;\n    if (childViewContainer) {\n\n      const selector = _.result(containerView, 'childViewContainer');\n\n      if (selector.charAt(0) === '@' && containerView.ui) {\n        container = containerView.ui[selector.substr(4)];\n      } else {\n        container = containerView.$(selector);\n      }\n\n      if (container.length <= 0) {\n        throw new MarionetteError({\n          name: 'ChildViewContainerMissingError',\n          message: `The specified \"childViewContainer\" was not found: ${containerView.childViewContainer}`\n        });\n      }\n\n    } else {\n      container = containerView.$el;\n    }\n\n    containerView.$childViewContainer = container;\n    return container;\n  },\n\n  // Internal method to reset the `$childViewContainer` on render\n  resetChildViewContainer() {\n    if (this.$childViewContainer) {\n      this.$childViewContainer = undefined;\n    }\n  }\n});\n\n// To prevent duplication but allow the best View organization\n// Certain View methods are mixed directly into the deprecated CompositeView\nconst MixinFromView = _.pick(View.prototype, 'serializeModel', 'getTemplate', '_renderTemplate', 'mixinTemplateContext', 'attachElContent');\n_.extend(CompositeView.prototype, MixinFromView);\n\nexport default CompositeView;\n","// Behavior\n// --------\n\n// A Behavior is an isolated set of DOM /\n// user interactions that can be mixed into any View.\n// Behaviors allow you to blackbox View specific interactions\n// into portable logical chunks, keeping your views simple and your code DRY.\n\nimport _                  from 'underscore';\nimport getUniqueEventName from './utils/get-unique-event-name';\nimport MarionetteObject   from './object';\nimport DelegateEntityEventsMixin      from './mixins/delegate-entity-events';\nimport TriggersMixin      from './mixins/triggers';\nimport UIMixin            from './mixins/ui';\n\nconst ClassOptions = [\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'triggers',\n  'ui'\n];\n\nconst Behavior = MarionetteObject.extend({\n  cidPrefix: 'mnb',\n\n  constructor(options, view) {\n    // Setup reference to the view.\n    // this comes in handle when a behavior\n    // wants to directly talk up the chain\n    // to the view.\n    this.view = view;\n    this.defaults = _.clone(_.result(this, 'defaults', {}));\n    this._setOptions(this.defaults, options);\n    this.mergeOptions(this.options, ClassOptions);\n\n    // Construct an internal UI hash using\n    // the behaviors UI hash and then the view UI hash.\n    // This allows the user to use UI hash elements\n    // defined in the parent view as well as those\n    // defined in the given behavior.\n    // This order will help the reuse and share of a behavior\n    // between multiple views, while letting a view override a\n    // selector under an UI key.\n    this.ui = _.extend({}, _.result(this, 'ui'), _.result(view, 'ui'));\n\n    MarionetteObject.apply(this, arguments);\n  },\n\n  // proxy behavior $ method to the view\n  // this is useful for doing jquery DOM lookups\n  // scoped to behaviors view.\n  $() {\n    return this.view.$.apply(this.view, arguments);\n  },\n\n  // Stops the behavior from listening to events.\n  // Overrides Object#destroy to prevent additional events from being triggered.\n  destroy() {\n    this.stopListening();\n\n    return this;\n  },\n\n  proxyViewProperties() {\n    this.$el = this.view.$el;\n    this.el = this.view.el;\n\n    return this;\n  },\n\n  bindUIElements() {\n    this._bindUIElements();\n\n    return this;\n  },\n\n  unbindUIElements() {\n    this._unbindUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    this.view._ensureViewIsIntact();\n    return this._getUI(name);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  getEvents() {\n    // Normalize behavior events hash to allow\n    // a user to use the @ui. syntax.\n    const behaviorEvents = this.normalizeUIKeys(_.result(this, 'events'));\n\n    // binds the handler to the behavior and builds a unique eventName\n    return _.reduce(behaviorEvents, function(events, behaviorHandler, key) {\n      if (!_.isFunction(behaviorHandler)) {\n        behaviorHandler = this[behaviorHandler];\n      }\n      if (!behaviorHandler) { return; }\n      key = getUniqueEventName(key);\n      events[key] = _.bind(behaviorHandler, this);\n      return events;\n    } , {}, this);\n  },\n\n  // Internal method to build all trigger handlers for a given behavior\n  getTriggers() {\n    if (!this.triggers) { return; }\n\n    // Normalize behavior triggers hash to allow\n    // a user to use the @ui. syntax.\n    const behaviorTriggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    return this._getViewTriggers(this.view, behaviorTriggers);\n  }\n\n});\n\n_.extend(Behavior.prototype, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\nexport default Behavior;\n","// Application\n// -----------\nimport _                from 'underscore';\nimport MarionetteObject from './object';\nimport Region           from './region';\n\nconst ClassOptions = [\n  'region',\n  'regionClass'\n];\n\n// A container for a Marionette application.\nconst Application = MarionetteObject.extend({\n  cidPrefix: 'mna',\n\n  constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    this._initRegion();\n\n    MarionetteObject.prototype.constructor.apply(this, arguments);\n  },\n\n  regionClass: Region,\n\n  _initRegion(options) {\n    const region = this.region;\n    const RegionClass = this.regionClass;\n\n    // if the region is a string expect an el or selector\n    // and instantiate a region\n    if (_.isString(region)) {\n      this._region = new RegionClass({\n        el: region\n      });\n      return;\n    }\n\n    this._region = region;\n  },\n\n  getRegion() {\n    return this._region;\n  },\n\n  showView(view, ...args) {\n    const region = this.getRegion();\n    return region.show(view, ...args);\n  },\n\n  getView() {\n    return this.getRegion().currentView;\n  },\n\n  // kick off all of the application's processes.\n  start(options) {\n    this.triggerMethod('before:start', this, options);\n    this.triggerMethod('start', this, options);\n    return this;\n  }\n\n});\n\nexport default Application;\n","// App Router\n// ----------\n\n// Reduce the boilerplate code of handling route events\n// and then calling a single method on another object,\n// called a controller.\n// Have your routers configured to call the method on\n// your controller, directly.\n//\n// Configure an AppRouter with `appRoutes`.\n//\n// App routers can only take one `controller` object.\n// It is recommended that you divide your controller\n// objects in to smaller pieces of related functionality\n// and have multiple routers / controllers, instead of\n// just one giant router and controller.\n//\n// You can also add standard routes to an AppRouter.\n\nimport Backbone                from 'backbone';\nimport _                       from 'underscore';\nimport { triggerMethod }       from './common/trigger-method';\nimport MarionetteError         from './error';\nimport CommonMixin             from './mixins/common';\n\nconst ClassOptions = [\n  'appRoutes',\n  'controller'\n];\n\nconst AppRouter = Backbone.Router.extend({\n\n  constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    Backbone.Router.apply(this, arguments);\n\n    const appRoutes = this.appRoutes;\n    const controller = this._getController();\n    this.processAppRoutes(controller, appRoutes);\n    this.on('route', this._processOnRoute, this);\n  },\n\n  // Similar to route method on a Backbone Router but\n  // method is called on the controller\n  appRoute(route, methodName) {\n    const controller = this._getController();\n    this._addAppRoute(controller, route, methodName);\n    return this;\n  },\n\n  // process the route event and trigger the onRoute\n  // method call, if it exists\n  _processOnRoute(routeName, routeArgs) {\n    // make sure an onRoute before trying to call it\n    if (_.isFunction(this.onRoute)) {\n      // find the path that matches the current route\n      const routePath = _.invert(this.appRoutes)[routeName];\n      this.onRoute(routeName, routePath, routeArgs);\n    }\n  },\n\n  // Internal method to process the `appRoutes` for the\n  // router, and turn them in to routes that trigger the\n  // specified method on the specified `controller`.\n  processAppRoutes(controller, appRoutes) {\n    if (!appRoutes) { return this; }\n\n    const routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n    _.each(routeNames, route => {\n      this._addAppRoute(controller, route, appRoutes[route]);\n    });\n\n    return this;\n  },\n\n  _getController() {\n    return this.controller;\n  },\n\n  _addAppRoute(controller, route, methodName) {\n    const method = controller[methodName];\n\n    if (!method) {\n      throw new MarionetteError(`Method \"${methodName}\" was not found on the controller`);\n    }\n\n    this.route(route, methodName, _.bind(method, controller));\n  },\n\n  triggerMethod: triggerMethod\n});\n\n_.extend(AppRouter.prototype, CommonMixin);\n\nexport default AppRouter;\n","import Backbone           from 'backbone';\nimport {version}          from '../package.json';\n\nimport proxy              from './utils/proxy';\nimport extend             from './utils/extend';\nimport deprecate          from './utils/deprecate';\n\nimport isNodeAttached     from './common/is-node-attached';\nimport mergeOptions       from './common/merge-options';\nimport getOption          from './common/get-option';\nimport normalizeMethods   from './common/normalize-methods';\nimport monitorViewEvents  from './common/monitor-view-events';\n\nimport {\n  bindEvents,\n  unbindEvents\n} from './common/bind-events';\n\nimport {\n  bindRequests,\n  unbindRequests\n} from './common/bind-requests';\n\nimport {\n  triggerMethod,\n  triggerMethodOn\n} from './common/trigger-method';\n\n\nimport MarionetteObject   from './object';\nimport TemplateCache      from './template-cache';\nimport View               from './view';\nimport CollectionView     from './collection-view';\nimport CompositeView      from './composite-view';\nimport Behavior           from './behavior';\nimport Region             from './region';\nimport Application        from './application';\nimport AppRouter          from './app-router';\nimport MarionetteError    from './error';\n\nimport behaviorsLookup    from './config/behaviors-lookup';\nimport Renderer           from './config/renderer';\n\nimport {\n  FEATURES,\n  isEnabled,\n  setEnabled\n} from './config/features';\n\nconst previousMarionette = Backbone.Marionette;\nconst Marionette = Backbone.Marionette = {};\n\n// This allows you to run multiple instances of Marionette on the same\n// webapp. After loading the new version, call `noConflict()` to\n// get a reference to it. At the same time the old version will be\n// returned to Backbone.Marionette.\nMarionette.noConflict = function() {\n  Backbone.Marionette = previousMarionette;\n  return this;\n};\n\n// Utilities\nMarionette.bindEvents = proxy(bindEvents);\nMarionette.unbindEvents = proxy(unbindEvents);\nMarionette.bindRequests = proxy(bindRequests);\nMarionette.unbindRequests = proxy(unbindRequests);\nMarionette.mergeOptions = proxy(mergeOptions);\nMarionette.getOption = proxy(getOption);\nMarionette.normalizeMethods = proxy(normalizeMethods);\nMarionette.extend = extend;\nMarionette.isNodeAttached = isNodeAttached;\nMarionette.deprecate = deprecate;\nMarionette.triggerMethod = proxy(triggerMethod);\nMarionette.triggerMethodOn = triggerMethodOn;\nMarionette.isEnabled = isEnabled;\nMarionette.setEnabled = setEnabled;\nMarionette.monitorViewEvents = monitorViewEvents;\n\nMarionette.Behaviors = {};\nMarionette.Behaviors.behaviorsLookup = behaviorsLookup;\n\n// Classes\nMarionette.Application = Application;\nMarionette.AppRouter = AppRouter;\nMarionette.Renderer = Renderer;\nMarionette.TemplateCache = TemplateCache;\nMarionette.View = View;\nMarionette.CollectionView = CollectionView;\nMarionette.CompositeView = CompositeView;\nMarionette.Behavior = Behavior;\nMarionette.Region = Region;\nMarionette.Error = MarionetteError;\nMarionette.Object = MarionetteObject;\n\n// Configuration\nMarionette.DEV_MODE = false;\nMarionette.FEATURES = FEATURES;\nMarionette.VERSION = version;\n\nexport default Marionette;\n"],"sourceRoot":"/source/"}